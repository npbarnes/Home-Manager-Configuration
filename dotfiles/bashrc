# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# Vi editing mode
set -o vi

# Long persistent history
export HISTFILESIZE=100000
export HISTSIZE=100000
shopt -s histappend

# Combine multiline commands into one in history
shopt -s cmdhist

# Do not save consecutive duplicate commnads or commnads that start with a space
HISTCONTROL=ignoreboth

# Show files after changing directory.
cdls() {
    builtin cd $@
    ls
}
alias cd='cdls'

# Tab completion ignores case
bind 'set completion-ignore-case on'

# Search history with up and down arrows
bind '"\e[A":history-search-backward'
bind '"\e[B":history-search-forward'

# I use Vim
export EDITOR="vim"

# >>> juliaup initialize >>>

# !! Contents within this block are managed by juliaup !!

case ":$PATH:" in
    *:/home/deck/.juliaup/bin:*)
        ;;

    *)
        export PATH=/home/deck/.juliaup/bin${PATH:+:${PATH}}
        ;;
esac

# <<< juliaup initialize <<<

# >>> Autostart ssh_agent >>>
env=~/.ssh/agent.env

agent_load_env () { test -f "$env" && . "$env" >| /dev/null ; }

agent_start () {
    (umask 077; ssh-agent >| "$env")
    . "$env" >| /dev/null ; }

agent_load_env

# agent_run_state: 0=agent running w/ key; 1=agent w/o key; 2=agent not running
agent_run_state=$(ssh-add -l >| /dev/null 2>&1; echo $?)

if [ ! "$SSH_AUTH_SOCK" ] || [ $agent_run_state = 2 ]; then
    agent_start
    ssh-add
elif [ "$SSH_AUTH_SOCK" ] && [ $agent_run_state = 1 ]; then
    ssh-add
fi

unset env

# <<< Autostart ssh_agent <<<
